#pragma experiment("BRIDGE_CONNECT")

import ElectricPower
import ElectricLogic
import I2S
import UART
import I2C
import USB2_0

from "atopile/st-stusb4500/st-stusb4500.ato" import STUSB4500
from "atopile/rpi-cm5/cm5.ato" import CM5
from "atopile/ti-tps54560x/ti-tps54560x.ato" import TPS54560x
from "atopile/saleae-header/saleae-header.ato" import SaleaeHeader
from "atopile/ti-tas5825mrhbr/ti_tas5825mrhbr.ato" import Texas_Instruments_TAS5825MRHBR_driver
from "atopile/adi-adau145x/adau145x.ato" import Analog_Devices_ADAU145x_driver
from "atopile/ti-tlv75901/ti-tlv75901.ato" import TLV75901_driver

from "parts/HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04/HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04.ato" import HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04_package
from "parts/JST_Sales_America_B02B_XASK_1_A_LF__SN/JST_Sales_America_B02B_XASK_1_A_LF__SN.ato" import JST_Sales_America_B02B_XASK_1_A_LF__SN_package

# from "hat_board/TE_Connectivity_1_2328702_0.py" import BoardToBoardConnectorInverted


module HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04:
    """
    5A USB 3.1 1 260℃ Standing paste 24P Female -30℃~+80℃ Gold Copper Alloy Type-C SMD
    USB Connectors ROHS

    Datasheet: https://wmsc.lcsc.com/wmsc/upload/file/pdf/v2/lcsc/2301120930_HCTL-HC-TYPE-C-24P-VS9-3-5A-F1-1-04_C5342428.pdf
    """

    power_vbus = new ElectricPower
    usb2 = new USB2_0
    sbu = new ElectricLogic[2]
    cc = new ElectricLogic[2]

    connector = new HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04_package

    power_vbus.hv ~ connector.VBUS
    power_vbus.lv ~ connector.GND
    power_vbus.lv ~ connector.EH
    usb2.usb_if.d.p.line ~ connector.DP1
    usb2.usb_if.d.p.line ~ connector.DP2
    usb2.usb_if.d.n.line ~ connector.DN1
    usb2.usb_if.d.n.line ~ connector.DN2
    sbu[0].line ~ connector.SBU2
    sbu[1].line ~ connector.SBU1
    cc[0].line ~ connector.CC1
    cc[1].line ~ connector.CC2


module NONOS:
    cm5 = new CM5
    regulator_5v = new TPS54560x
    regulator_3v3 = new TLV75901_driver
    amplifier = new Texas_Instruments_TAS5825MRHBR_driver
    pd_controller = new STUSB4500
    usb_connector = new HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04
    dsp = new Analog_Devices_ADAU145x_driver

    # board_to_board_connector = new BoardToBoardConnectorInverted
    full_range_speaker_connector = new JST_Sales_America_B02B_XASK_1_A_LF__SN_package
    tweeter_speaker_connector = new JST_Sales_America_B02B_XASK_1_A_LF__SN_package

    power_20v = new ElectricPower
    power_5v = new ElectricPower
    power_3v3 = new ElectricPower
    power_3v3_dsp = new ElectricPower

    debug_headers = new SaleaeHeader[3]

    # addressing
    pd_controller.i2c.address = 0x28

    # substitute default pd_controller.usb_connector
    pd_controller.usb_connector.exclude_from_bom = True
    usb_connector.power_vbus ~ pd_controller.pd_controller.power_vbus
    usb_connector.cc[0] ~ pd_controller.pd_controller.cc1
    usb_connector.cc[1] ~ pd_controller.pd_controller.cc2
    usb_connector.usb2 ~ pd_controller.usb2
    pd_controller.i2c ~ cm5.i2cs[0]

    # TOOD: make this work instead
    # pd_controller.usb_connector -> HCTL_HC_TYPE_C_24P_VS9_3_5A_F1_1_04

    # power
    pd_controller.power_out ~ power_20v
    power_20v ~> regulator_5v ~> power_5v
    power_5v ~ cm5.power_5v
    power_3v3 ~ pd_controller.power_mcu
    cm5.power_3v3 ~ power_3v3  # onboard regulator can provide 3v3

    power_5v ~> regulator_3v3 ~> power_3v3_dsp
    power_3v3_dsp ~ dsp.power

    # amplifier
    amplifier.power_pvdd ~ power_20v
    amplifier.power_dvdd ~ power_3v3
    cm5.i2cs[0] ~ amplifier.i2c
    cm5.cm5.gpio[3] ~ amplifier.mute
    cm5.cm5.gpio[4] ~ amplifier.warn
    cm5.cm5.gpio[5] ~ amplifier.fault
    cm5.cm5.gpio[6] ~ amplifier.pdn

    # speaker outputs
    amplifier.output_a.p.line ~ full_range_speaker_connector.1
    amplifier.output_a.n.line ~ full_range_speaker_connector.2
    amplifier.output_b.p.line ~ tweeter_speaker_connector.1
    amplifier.output_b.n.line ~ tweeter_speaker_connector.2

    # hat board
    # board_to_board_connector.i2c ~ cm5.i2c
    # board_to_board_connector.power_3v3 ~ power_3v3
    # board_to_board_connector.power_5v ~ power_5v

    # cm5.cm5.gpio[4] ~ board_to_board_connector.hat_reset
    # cm5.cm5.gpio[5] ~ board_to_board_connector.hat_nfc_irq
    # cm5.cm5.gpio[6] ~ board_to_board_connector.hat_touch_irq
    # cm5.cm5.gpio[7] ~ board_to_board_connector.hat_led_data

    # dsp
    dsp.reset_disable ~ cm5.cm5.gpio[17]  # TODO: which pin?
    dsp.model.i2c ~ cm5.i2cs[0]

    # workaround for incorrect .required in dsp package
    _pll_mclk = new ElectricLogic
    dsp.pll_mclk ~ _pll_mclk

    # TODO: review
    # TODO: cm5 I2S interface
    cm5_i2s = new I2S
    cm5_i2s.sck ~ cm5.cm5.gpio[18]
    cm5_i2s.ws ~ cm5.cm5.gpio[19]
    cm5_i2s.sd ~ cm5.cm5.gpio[21]
    cm5_i2s ~ dsp.model.i2s_ins[0]
    dsp.model.i2s_outs[0] ~ amplifier.i2s

    # debug headers
    debug_uart = new UART
    cm5.uart0 ~ debug_uart
    debug_uart.base_uart.tx ~ debug_headers[0].ch0
    debug_uart.base_uart.rx ~ debug_headers[0].ch1
    power_3v3.lv ~ debug_headers[0].gnd

    debug_i2c = new I2C
    cm5.i2cs[0] ~ debug_i2c
    debug_i2c.scl ~ debug_headers[1].ch0
    debug_i2c.sda ~ debug_headers[1].ch1
    power_3v3.lv ~ debug_headers[1].gnd

    debug_i2s = new I2S
    cm5_i2s ~ debug_i2s
    debug_i2s.sck ~ debug_headers[2].ch0
    debug_i2s.ws ~ debug_headers[2].ch1
    power_5v.hv ~ debug_headers[2].ch3.line
    power_3v3.lv ~ debug_headers[2].gnd
